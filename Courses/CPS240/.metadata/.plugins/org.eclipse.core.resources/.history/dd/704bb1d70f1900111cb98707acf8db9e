package angsty_Butterfliess;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JFormattedTextField;
import javax.swing.JComboBox;
import javax.swing.JTextPane;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;

/**
 * By Kyle Head
 */

/**
 * @author head1km
 *
 */
public class Rubric_Editor {

	private JFrame frmRubricEditor;
	private JTextField txtCourseName;
	private JTextField txtCourseTerm;
	private String newName = null;
	Course curCourse = new Course();
	private String newTerm = null;
	private String newCrn = null;
	private String newAssign = null;
	RubricMetadata rubData = new RubricMetadata();
	private String newDesc = null;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Rubric_Editor window = new Rubric_Editor();
					window.getFrmRubricEditor().setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Rubric_Editor() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		setFrmRubricEditor(new JFrame());
		getFrmRubricEditor().setTitle("Rubric Editor");
		getFrmRubricEditor().setBounds(100, 100, 455, 524);
		getFrmRubricEditor().setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JLabel lblCourseName = new JLabel("Course Name:");
		
		JLabel lblNewLabel = new JLabel("Course Term:");
		
		JLabel lblCourseCrn = new JLabel("Course CRN:");
		
		JLabel lblAssignmentNumber = new JLabel("Assignment Number:");
		
		JLabel lblDateIssued = new JLabel("Date Issued:");
		
		JLabel lblDateDue = new JLabel("Date Due:");
		
		JLabel lblAssignmentDescription = new JLabel("Assignment Description:");
		
		JLabel lblQuestions = new JLabel("Questions:");
		
		txtCourseName = new JTextField();
		txtCourseName.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent arg0) {
				int key = arg0.getKeyCode();
				if(key == 10) {
					newName = txtCourseName.getText();
					curCourse.setName(newName);
					System.out.print(curCourse.getName());
					rubData.setCourse(curCourse);
				}
				
			}
		});
		lblCourseName.setLabelFor(txtCourseName);
		txtCourseName.setText("Course Name");
		txtCourseName.setColumns(10);
		
		final JFormattedTextField frmtdtxtfldCrn = new JFormattedTextField();
		frmtdtxtfldCrn.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				int key = e.getKeyCode();
				if(key == 10) {
					newCrn = frmtdtxtfldCrn.getText();
					curCourse.setCrn(newCrn);
					System.out.print(curCourse.getCrn());
					rubData.setCourse(curCourse);
				}
				
			}
		});
		lblCourseCrn.setLabelFor(frmtdtxtfldCrn);
		frmtdtxtfldCrn.setText("CRN");
		
		txtCourseTerm = new JTextField();
		txtCourseTerm.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent arg0) {
				int key = arg0.getKeyCode();
				if(key == 10) {
					newTerm = txtCourseTerm.getText();
					curCourse.setTerm(newTerm);
					System.out.print(curCourse.getTerm());
					rubData.setCourse(curCourse);
				}
				
			}
		});
		lblNewLabel.setLabelFor(txtCourseTerm);
		txtCourseTerm.setText("Course Term");
		txtCourseTerm.setColumns(10);
		
		final JFormattedTextField frmtdtxtfldAssignment = new JFormattedTextField();
		frmtdtxtfldAssignment.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				int key = e.getKeyCode();
				if(key == 10) {
					newAssign = frmtdtxtfldAssignment.getText();
					rubData.setAssignNumber(newAssign);
					System.out.print(rubData.getAssignNumber());
				}
			}
		});
		lblAssignmentNumber.setLabelFor(frmtdtxtfldAssignment);
		frmtdtxtfldAssignment.setText("Assignment #");
		
		JComboBox comboBox = new JComboBox();
		comboBox.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				JComboBox box = (JComboBox) arg0.getSource();
				String year = (String) box.getSelectedItem();
				System.out.print(year);
			}
		});
		comboBox.setModel(new DefaultComboBoxModel(new String[] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}));
		
		JComboBox comboBox_1 = new JComboBox();
		comboBox_1.setModel(new DefaultComboBoxModel(new String[] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
		
		JComboBox comboBox_2 = new JComboBox();
		comboBox_2.setModel(new DefaultComboBoxModel(new String[] {"2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030"}));
		
		JComboBox comboBox_3 = new JComboBox();
		comboBox_3.setModel(new DefaultComboBoxModel(new String[] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"}));
		
		JComboBox comboBox_4 = new JComboBox();
		comboBox_4.setModel(new DefaultComboBoxModel(new String[] {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
		
		JComboBox comboBox_5 = new JComboBox();
		comboBox_5.setModel(new DefaultComboBoxModel(new String[] {"2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030"}));
		
		final JTextPane txtpnEnterDescription = new JTextPane();
		txtpnEnterDescription.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				int key = e.getKeyCode();
				if(key == 10) {
					newDesc = txtpnEnterDescription.getText();
					rubData.setDescription(newDesc);
					System.out.print(rubData.getDescription());
				}
			}
		});
		lblAssignmentDescription.setLabelFor(txtpnEnterDescription);
		txtpnEnterDescription.setText("Enter Description");
		
		JButton btnAddAQuestion = new JButton("Add A Question");
		btnAddAQuestion.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				if(arg0 != null){
					TestQuestion.main(null);
					getFrmRubricEditor().setVisible(false);
				}
			}
		});
		lblQuestions.setLabelFor(btnAddAQuestion);
		GroupLayout groupLayout = new GroupLayout(getFrmRubricEditor().getContentPane());
		groupLayout.setHorizontalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addGap(33)
					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblQuestions)
							.addGap(18)
							.addComponent(btnAddAQuestion))
						.addComponent(lblAssignmentDescription)
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblCourseName)
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addComponent(txtCourseName, GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
						.addGroup(groupLayout.createSequentialGroup()
							.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
								.addComponent(lblDateIssued)
								.addComponent(lblDateDue))
							.addPreferredGap(ComponentPlacement.RELATED)
							.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
								.addGroup(groupLayout.createSequentialGroup()
									.addComponent(comboBox_3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(comboBox_4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(comboBox_5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
								.addGroup(groupLayout.createSequentialGroup()
									.addComponent(comboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(comboBox_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(comboBox_2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblAssignmentNumber)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(frmtdtxtfldAssignment, GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblCourseCrn)
							.addGap(18)
							.addComponent(frmtdtxtfldCrn))
						.addGroup(groupLayout.createSequentialGroup()
							.addComponent(lblNewLabel)
							.addGap(18)
							.addComponent(txtCourseTerm, GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
						.addComponent(txtpnEnterDescription, GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
					.addGap(32))
		);
		groupLayout.setVerticalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addGap(18)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblCourseName)
						.addComponent(txtCourseName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblNewLabel)
						.addComponent(txtCourseTerm, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblCourseCrn)
						.addComponent(frmtdtxtfldCrn, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblAssignmentNumber)
						.addComponent(frmtdtxtfldAssignment, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblDateIssued)
						.addComponent(comboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(comboBox_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(comboBox_2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(18)
					.addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
						.addComponent(lblDateDue)
						.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
							.addComponent(comboBox_3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(comboBox_4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(comboBox_5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
					.addGap(18)
					.addComponent(lblAssignmentDescription)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(txtpnEnterDescription, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
					.addGap(18)
					.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
						.addComponent(lblQuestions)
						.addComponent(btnAddAQuestion))
					.addContainerGap(70, Short.MAX_VALUE))
		);
		getFrmRubricEditor().getContentPane().setLayout(groupLayout);
	}

	public JFrame getFrmRubricEditor() {
		return frmRubricEditor;
	}

	public void setFrmRubricEditor(JFrame frmRubricEditor) {
		this.frmRubricEditor = frmRubricEditor;
	}
}
